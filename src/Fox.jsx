/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 Fox.gltf --transform 
Files: Fox.gltf [45.1KB] > Fox-transformed.glb [90.3KB] (-100%)
*/

import React, { useEffect, useMemo } from 'react';
import { useGLTF, useTexture, useAnimations } from '@react-three/drei';
import { useGraph } from '@react-three/fiber';
import * as SkeletonUtils from 'three/addons/utils/SkeletonUtils.js';
import * as THREE from 'three';

export default function Fox(props) {
  const { animations, scene } = useGLTF(
    './models/fox/glTF/Fox-transformed.glb'
  );
  const texture = useTexture('models/fox/glTF/texture.jpg');
  texture.flipY = false;
  texture.colorSpace = THREE.SRGBColorSpace;

  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const { nodes } = useGraph(clone);

  const { ref, actions } = useAnimations(animations);

  useEffect(() => {
    actions.Survey.play();
  }, []);

  return (
    <>
      <group ref={ref} {...props} dispose={null}>
        <group>
          <primitive object={nodes._rootJoint} />
          <skinnedMesh
            name='fox'
            geometry={nodes.fox.geometry}
            material={texture}
            skeleton={nodes.fox.skeleton}
          >
            {props.useShadow ? (
              <meshBasicMaterial
                color={0x000000}
                opacity={0.2}
                transparent={true}
              />
            ) : (
              <meshBasicMaterial map={texture} />
            )}
          </skinnedMesh>
        </group>
      </group>
    </>
  );
}

useGLTF.preload('./models/fox/glTF/Fox-transformed.glb');
